import "github.com/kocircuit/kocircuit/bootstrap/lang"
import "github.com/kocircuit/kocircuit/bootstrap/source"
import "github.com/kocircuit/kocircuit/bootstrap/context/span" as ko_span

// ko play github.com/kocircuit/kocircuit/bootstrap/space/TestAll
TestAll() {
	return: And(
		TestStep()
		TestRoot()
	)
}

// ko play github.com/kocircuit/kocircuit/bootstrap/space/TestStep
TestStep() {
	return: Equal(
		PathTo(Walk(place: Walk(place: testRoot(), step: "step1"), step: "step2"))
		("step1", "step2")
	)
}

// ko play github.com/kocircuit/kocircuit/bootstrap/context/place/TestRoot
TestRoot() {
	return: Equal(
		testRoot()
		(
			span: (
				view: (id: "2zmoro9", source: "[0] 2zmoro9, place.ko:1:1, test.place", tag: "test.place")
				sheath: (
					supervisor: (name: "test.place", source: testSrc())
				)
				background: "qp"
			)
		)
	)
}

testSrc() { return: source.Point(file: "place.ko", offset: 0, line: 1, column: 1) }

testRoot() {
	return: Root(
		ko_span.Root(
			supervisor: lang.Supervisor(name: "test.place", source: testSrc())
			background: "qp"
		)
	)
}