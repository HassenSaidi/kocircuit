// fields must be a sequence of (name, type) pairs.
VarietyType(transform, fields) {
	return: ( // type
		variety: ( // type variety
			transform: Expect(transform)
			fields: NoDuplicateFields(fields)
		)
	)
}

VarietyTypeTransform(varietyType?) {
	return: Expect(varietyType.variety.transform)
}

VarietyTypeFields(varietyType?) {
	return: Expect(varietyType.variety).fields
}

WhenVariety(type?, then, else) {
	return: When(
		have: All(variety: Expect(type).variety)
		then: then, else: else
	)
}

// fields must be a sequence of (name, type) pairs.
AugmentVarietyType(varietyType?, fields) {
	return: VarietyType(
		transform: Expect(varietyType.variety.transform)
		fields: NoDuplicateFields(Merge(varietyType.variety.fields, fields))
	)
}
