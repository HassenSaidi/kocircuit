syntax = "proto2";

package ko.circuit;

option go_package = "proto";

message Repo {
	repeated Package package = 1;
}

message Package {
	required string path = 1;
	repeated Func func = 2;
}

message Func {
	optional string doc = 1;
	required ID id = 11;
	required string pkgPath = 12;
	required string name = 13;
	repeated Step step = 14;
	required string enter = 15;
	repeated Arg arg = 16;
	optional string monadic = 17;
	required string leave = 18;
	optional Source source = 19;
}

message ID {
	required uint64 data = 1;
}

message Step {
	required ID id = 1;
	required string label = 2;
	repeated Gather gather = 3;
	required Logic logic = 4;
	optional Source source = 5;
	optional string pkgPath = 6;
	optional string func = 7;
}

message Arg {
	required string name = 1;
	required string step = 2;
}

message Gather {
	required string arg = 1;
	required string step = 2;
}

// Circuit step logic types

message Logic {
	oneof logic {
		LogicEnter enter = 1;
		LogicLeave leave = 2;
		LogicNumber number = 3;
		LogicLink link = 4;
		LogicSelect select = 5;
		LogicAugment augment = 6;
		LogicInvoke invoke = 7;
		LogicOperator operator = 8;
		LogicPkgFunc pkgFunc = 9;
	}
}

message LogicEnter {}

message LogicLeave {}

message LogicNumber {
	oneof number {
		bool bool = 1;
		string string = 2;
		int64 int64 = 3;
		double float64 = 4;
	}
}

message LogicLink {
	required string name = 1;
	optional bool monadic = 2;
}

message LogicSelect {
	repeated string path = 1;
}

message LogicAugment {}

message LogicInvoke {}

message LogicOperator {
	repeated string path = 1;
}

message LogicPkgFunc {
	required string pkg = 1;
	required string func = 2;
}

// Source info

message Source {
	required string file = 1;
	required Position start = 2;
	required Position end = 3;
}

message Position {
	required int64 offset = 1;
	required int64 line = 2;
	required int64 column = 3;
}
