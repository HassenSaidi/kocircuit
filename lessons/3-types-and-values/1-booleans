# BOOLEAN

Ko booleans can assume the values `true` or `false`.

XX

## BOOLEAN ARITHMETIC

Ko provides a few builtin functions for common arithmetic maniulations with booleans.

### CONJUNCTION

The builtin function `And` expects a single unnamed argument, which is a sequence of booleans.
It returns the conjunction of their values. If the sequence is empty, `And` returns `true`.

The following examples returns `true` if the integral argument `y` is strictly between
the integral arguments `x` and `z`:

	import "integer"

	IsBetween(x, y, z) {
		return: And(
			integer.Less(x, y)
			integer.Less(y, z)
		)
	}

### DISJUNCTION

The builtin function `Or` expects a single unnamed argument, which is a sequence of booleans.
It returns the disjunction of their values. If the sequence is empty, `Or` returns `false`.

The following example returns `true` if any two of its three arguments, `x`, `y` and `z`, are equal:

	import "integer"

	AnyIsNonZero(x, y, z) {
		return: Or(
			Equal(x, y)
			Equal(y, z)
			Equal(x, z)
		)
	}
